<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="
           http://maven.apache.org/POM/4.0.0
           http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>ski-system</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <!-- Java -->
        <maven.compiler.source>21</maven.compiler.source>
        <maven.compiler.target>21</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- JavaFX -->
        <javafx.version>21.0.2</javafx.version>
        <!-- Testing - using stable versions -->
        <junit.jupiter.version>5.10.1</junit.jupiter.version>
        <mockito.version>5.7.0</mockito.version>
        <!-- Updated JaCoCo version for Java 21 support -->
        <jacoco.version>0.8.11</jacoco.version>
        <!-- Updated Surefire version -->
        <surefire.version>3.2.2</surefire.version>
    </properties>

    <dependencies>
        <!-- JavaFX UI -->
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-controls</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-fxml</artifactId>
            <version>${javafx.version}</version>
        </dependency>
        <dependency>
            <groupId>org.openjfx</groupId>
            <artifactId>javafx-swing</artifactId>
            <version>${javafx.version}</version>
        </dependency>

        <!-- SQLite JDBC -->
        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
            <version>3.44.1.0</version>
        </dependency>

        <!-- JUnit 5 -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        
        <!-- Mockito with correct stable versions for Java 21 -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>5.7.0</version>
            <scope>test</scope>
        </dependency>
        
        <!-- Mockito inline for static mocking -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>5.2.0</version>
            <scope>test</scope>
        </dependency>
        
        <!-- Mockito JUnit Jupiter extension -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>5.7.0</version>
            <scope>test</scope>
        </dependency>
        
        <!-- Updated Byte Buddy for Java 21 compatibility -->
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
            <version>1.14.9</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy-agent</artifactId>
            <version>1.14.9</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Compiler plugin with updated version -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <source>21</source>
                    <target>21</target>
                </configuration>
            </plugin>

            <!-- JavaFX-run -->
            <plugin>
                <groupId>org.openjfx</groupId>
                <artifactId>javafx-maven-plugin</artifactId>
                <version>0.0.8</version>
                <configuration>
                    <mainClass>org.example.App</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Surefire for running JUnit 5 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.version}</version>
                <configuration>
                    <includes>
                        <include>**/*Test.java</include>
                    </includes>
                    <!-- JVM arguments for Java 21 and Byte Buddy compatibility -->
                    <argLine>@{argLine} 
                        --add-opens java.base/java.lang=ALL-UNNAMED
                        --add-opens java.base/java.util=ALL-UNNAMED
                        --add-opens java.base/java.time=ALL-UNNAMED
                        -Dnet.bytebuddy.experimental=true
                    </argLine>
                    <!-- System properties for testing -->
                    <systemPropertyVariables>
                        <java.awt.headless>true</java.awt.headless>
                        <net.bytebuddy.experimental>true</net.bytebuddy.experimental>
                    </systemPropertyVariables>
                    <!-- Exclude problematic system classes from instrumentation -->
                    <excludes>
                        <exclude>**/sun/**</exclude>
                        <exclude>**/com/sun/**</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <!-- JaCoCo for code coverage - updated version for Java 21 -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <!-- Prepare agent for test execution -->
                    <execution>
                        <goals><goal>prepare-agent</goal></goals>
                    </execution>
                    <!-- Generate report after tests -->
                    <execution>
                        <id>report</id>
                        <phase>verify</phase>
                        <goals><goal>report</goal></goals>
                    </execution>
                    <!-- Check coverage thresholds -->
                    <execution>
                        <id>check</id>
                        <goals><goal>check</goal></goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit>
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.90</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <!-- Exclude Logger and system classes from coverage -->
                    <excludes>
                        <exclude>org/example/Logger.class</exclude>
                        <exclude>sun/**</exclude>
                        <exclude>com/sun/**</exclude>
                        <exclude>org/example/*Controller.class</exclude>
                        <exclude>org/example/*Controller$*.class</exclude> 
                        <exclude>org/example/App.class</exclude>
                        <exclude>org/example/Services.class</exclude>
                    </excludes>
                    <!-- Exclude system packages from instrumentation -->
                    <excludeClassLoaders>
                        <excludeClassLoader>sun.reflect.DelegatingClassLoader</excludeClassLoader>
                    </excludeClassLoaders>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>